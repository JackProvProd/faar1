
def func2(arg22, arg23):
    var57 = func3(arg22, arg23)
    var61 = func7(arg23, var57)
    var64 = class9()
    for var65 in xrange(37):
        var64.func10(var61, var65)
    var69 = func11(var57, arg22)
    var70 = var69 + arg23
    var71 = (arg22 & 298 ^ var57) + arg22
    var72 = arg23 | (var69 | var69)
    var73 = var71 ^ ((-398761775 - var61) ^ var61)
    var74 = var72 - var72 - arg23
    var75 = var74 + var73 ^ var57 | arg23
    var76 = (252316501 - var72 + var70) & var70
    var77 = var69 + var74 | -397
    var78 = var57 | arg22 ^ arg23 & 885
    var79 = (var71 & var75) + 289
    var80 = var75 + arg22
    result = var61 - (var61 | -459 | (var69 ^ (var74 ^ var79) - var79 & var70) + (var79 + (var73 ^ var57))) & var73
    return result
class class9(object):
    def func10(self, arg62, arg63):
        return 0
def func5(arg26, arg27):
    def func6(arg28, arg29):
        var30 = arg26 ^ (arg29 | -1556883756 ^ (arg26 - arg28) - 1632837621 | arg27) | arg27 - 378858990
        var31 = arg26 | arg29
        result = arg29 ^ -711
        return result
    var32 = func6(arg27, arg26)
    var33 = var32 & arg27
    var34 = ((arg26 - var32) - -704284416) ^ var33
    var35 = var32 & arg26 + var33 ^ var32
    var36 = var33 + var35 & arg27 ^ var33
    if arg27 < var32:
        var37 = arg26 ^ var36 + -795003294 & var34
    else:
        var37 = var32 & arg27
    var38 = var36 - 382 | var32 + arg27
    var39 = ((arg27 - arg27) & var33) + var36
    if var33 < var36:
        var40 = (var39 + var36) | var33 + var39
    else:
        var40 = var35 | 159
    var41 = (arg27 & (var39 & 256656896)) + var33
    var42 = -746936153 ^ var39
    var43 = arg27 ^ (64 | var39 - var39)
    if arg26 < var39:
        var44 = ((var35 + 1986446025) ^ var32) | arg27
    else:
        var44 = (var43 + (arg27 + var34)) | var43
    var45 = -1417609564 + (var42 & 985)
    var46 = (-704 - var32) & var36
    var47 = (var33 + var41) + 578 - var43
    var48 = (var47 + var34) & var43 & var42
    var49 = (var35 - var32) & var42 + var36
    var50 = var42 - ((var49 & arg26) - arg27)
    var51 = var46 & var34 | var50 & var48
    var52 = var33 - var39 ^ (750 + var35)
    var53 = var47 ^ arg27 & var33
    var54 = var46 + var34
    var55 = var45 + var54
    result = (var51 ^ var45 & var42) - (((613849281 | arg26) ^ var46 ^ 791 + var32) - var50 & ((var49 + var43) + var48))
    return result
def func1(arg1, arg2):
    var3 = arg1 & (arg2 + arg1 & 58)
    var4 = ((-557 - 636) + -925) + -1141688964
    var5 = arg1 + (var3 + 1761215411) ^ var4
    var6 = 1286577412 | arg2 & arg2
    var7 = -61 + arg2 - 712
    var8 = (var3 ^ arg2) - 460 - arg2
    var9 = ((var3 - var8) ^ arg1) ^ var6
    var10 = (var8 - (var8 & -489599405)) ^ var8
    var11 = 2092401149 + arg2 ^ var10 & 1692593012
    var12 = 60946128 + (var11 + arg1)
    var13 = (-72 | -649261868) - var5 & -394663396
    var14 = -643 - (arg2 & var7)
    var15 = -891 ^ var3
    var16 = var12 ^ -135
    if arg1 < var15:
        var17 = var9 - arg1 + arg1 + var7
    else:
        var17 = arg2 ^ var4
    var18 = var15 - var15
    var19 = var9 ^ (var4 + 816) & arg1
    var20 = var16 | ((-887 + var3) ^ var6)
    var21 = var11 + (924 - 171910836 + var5)
    result = var7 + (36281430 - var20 ^ (var19 | ((arg2 | var19 + 1917627668 | 1995885277) - var9) ^ var3) + var21) & var18
    return result
def func3(arg24, arg25):
    def func4(acc, rest):
        var56 = func5(-6, -3)
        if acc == 0:
            return var56
        else:
            result = func4(acc - 1, var56)
            return result
    result = func4(10, 0)
    return result
def func7(arg58, arg59):
    closure = [0]
    def func8(acc, rest):
        var60 = closure[0] ^ ((((closure[0] ^ -1) & rest) + -1) ^ 5) & -9
        closure[0] += var60
        if acc == 0:
            return var60
        else:
            result = func8(acc - 1, var60)
            return result
    result = func8(10, 0)
    return result
def func11(arg66, arg67):
    closure = [0]
    def func12(acc, rest):
        var68 = -9 & closure[0]
        closure[0] += var68
        if acc == 0:
            return var68
        else:
            result = func12(acc - 1, var68)
            return result
    result = func12(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 0'
    print 'func_number: 2'
    print 'arg_number: 22'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 13'
    print 'arg_number: 81'
    for i in xrange(25000):
        x = 5
        x = func2(x, i)
        print x,
